package com.kh.practice.set.view;

import java.util.HashSet;
import java.util.Iterator;
import java.util.Scanner;
import java.util.TreeSet;

import com.kh.practice.set.controller.LotteryController;
import com.kh.practice.set.model.vo.Lottery;

public class LotteryMenu {
	
	private Scanner sc = new Scanner(System.in);
	
	private LotteryController lc = new LotteryController();
	
	
	public void mainMenu() {
		System.out.println("========== KH 추첨 프로그램 =========="); 
		System.out.println("======******* 메인 메뉴 *******======"); 
		
		System.out.println("1. 추첨 대상 추가");
		System.out.println("2. 추첨 대상 삭제");
		System.out.println("3. 당첨 대상 확인");
		System.out.println("4. 정렬된 당첨 대상 확인");
		System.out.println("5. 당첨 대상 검색");
		System.out.println("9. 종료");
		System.out.print("메뉴 번호 입력 : ");
		
		 int menu = sc.nextInt();
		 sc.nextLine();
		 
		 switch(menu) {
		 
		 case 1:
			 insertObject();
			 break;
		 case 2:
			 deleteObject();
			 break;
		 case 3:
			 winObject();
			 break;
		 case 4:
			 sortedWinObject();
			 break;
		 case 5:
			 searchWinner();
			 break;
		 case 9:
			 System.out.println("프로그램 종료.");
			 return;
			 default:
			 System.out.println("잘못 입력하였습니다. 다시 입력해주세요");
			 break;
		 }		
	}
	// 1. 추첨 대상 추가용 view 메소드 
	public void insertObject() {
		//이름 핸드폰번호를 입력받아 Lottery 객체를 추첨자 정보 저장(객체생성)
		System.out.print("추가할 추첨 대상 수 : ");
		int num = sc.nextInt();
		sc.nextLine();
		
		System.out.print("이름 : ");
		String name = sc.nextLine();
		System.out.print("핸드폰 번호('-'빼고) : ");
		String phone = sc.nextLine();
		
		Lottery l = new Lottery(name, phone);
		//컨트룰러의 insertObj로 전달 
		if(lc.insertObject(l)) {
			System.out.println("추가 완료되었습니다");
		}else{
			System.out.println("중복된 대상입니다. 다시 입력하세요.");
		}
	
		
	}
	// 2. 추첨 대상 삭제용 view 메소드 
	public void deleteObject() {
		//삭제기준 : 이름, 연락처
		//이름, 핸드폰 번호를 입력받아 
		System.out.print("이름 : ");
		String name = sc.nextLine();
		
		System.out.print("핸드폰 번호('-'빼고) : ");
		String phone = sc.nextLine();
		
		Lottery remove = lc.deleteObject(name, phone);
	
		
		if(remove != null) {
			System.out.println("삭제 완료 되었습니다");
		}else {
			System.out.println("존재하지 않는 대상입니다.");
		}
	}
	// 3. 당첨 대상 확인용 view 메소드 
	public void winObject() {
		//컨트룰러로부터 받아온 Set 객체를 println 메소드를 통해 출력
		HashSet<Lottery> lSet = lc.winObject();
		System.out.println(lSet);
		
	}
	// 4. 정렬된 당첨 대상 확인
	public void sortedWinObject() {
		//컨트룰러에서 받아온 Set 객체를 Iterator를 통해 출력
		TreeSet<Lottery> lSet =lc.sortedWinObject();
		
		
		Iterator<Lottery> it = lSet.iterator();
		
		while(it.hasNext()){
			Lottery l = it.next();
			System.out.println(l);
		}
		
	}
	
	
	public void searchWinner() {
		//검색대상 이름 핸드폰 번호를 입력받아
		System.out.print("이름 : ");
		String name = sc.nextLine();
		
		System.out.print("핸드폰 번호('-'빼고) : ");
		String phone = sc.nextLine();
		//매개변수 있는 생성자를 사용해 객체생성
		Lottery l = new Lottery(name, phone);
		
		//컨트룰러에게 전달후 결과에 따라 출력
		boolean result = lc.searchWinner(l);
		
		if(result) {
			System.out.print("축하합니다. 당첨 목록에 존재합니다.");
		}else {
			System.out.print("안타깝지만 당첨 목록에 존재하지 않습니다.");
		}
		
	}

}
