package com.kh.practice.set.controller;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.TreeSet;

import com.kh.practice.set.model.vo.Lottery;

public class LotteryController {
	
	private HashSet<Lottery> lottery = new HashSet<>();
	
	private HashSet<Lottery> win = new HashSet<>();
	
	public boolean insertObject(Lottery l) {
 // 전달 받은 l을 lottery에 추가 후, 추가 결과인 boolean 값 반환 
		return lottery.add(l);
	}
	
	public boolean deleteObject(Lottery l){
		// 전달 받은 l을 lottery에서 삭제 
		boolean result = Lottery.remove(l);
		
	    // 당첨자 목록(win) 중에 삭제된 추첨 대상자가 존재할 수 있으니 
		// 삭제 결과인 boolean 값과 win객체가 null이 아닐 때에만  
		if (result && win !=null) {
			
		
	    // win에도 해당 추첨 대상자 삭제
			win.remove(l);
		}
		return result;
	
	}
	public HashSet winObject() {
		//추첨 대상자 중에서 랜덤으로 뽑아 담청 목록에 넣는 매소드 
		if(lottery.size() < 4) {
			return null;
		}
		//랜덤으로 뽑기 위해 lottery를 ArrayList에 담고
		//Has
		ArrayList<Lottery> lotteryList = new ArrayList<>(lottery);
		//lotteryList.addAll(lotteryList)
		while(lotteryList.size() < 4) {
			int random = (int)(Math.random()*lottery.size());
			win.add( lotteryList.get(random));
		}
		return win;
	}
	
	
	public TreeSet sortedWinObject() {
		//이름으로 오름차순 정렬하되, 이름이 같으면 번호로 오름차순 하는 정렬 기준을 가지고
		//정렬된 결과를 반환
		
		//이 때, 미리 만들어진 win을 가지고 정렬하기 때문에 당첨 대상 확인을 꼭 먼저 해야함
		
	}
	
	public boolean searchWinner(Lottery i) {
		
	}

	public Lottery deleteObject(String name, String phone) {
		this.name=name;
		this.phone=phone;
	}
	

}
